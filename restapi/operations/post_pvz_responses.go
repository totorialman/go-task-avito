// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/totorialman/go-task-avito/models"
)

// PostPvzCreatedCode is the HTTP code returned for type PostPvzCreated
const PostPvzCreatedCode int = 201

/*
PostPvzCreated ПВЗ создан

swagger:response postPvzCreated
*/
type PostPvzCreated struct {

	/*
	  In: Body
	*/
	Payload *models.PVZ `json:"body,omitempty"`
}

// NewPostPvzCreated creates PostPvzCreated with default headers values
func NewPostPvzCreated() *PostPvzCreated {

	return &PostPvzCreated{}
}

// WithPayload adds the payload to the post pvz created response
func (o *PostPvzCreated) WithPayload(payload *models.PVZ) *PostPvzCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post pvz created response
func (o *PostPvzCreated) SetPayload(payload *models.PVZ) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPvzCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostPvzBadRequestCode is the HTTP code returned for type PostPvzBadRequest
const PostPvzBadRequestCode int = 400

/*
PostPvzBadRequest Неверный запрос

swagger:response postPvzBadRequest
*/
type PostPvzBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostPvzBadRequest creates PostPvzBadRequest with default headers values
func NewPostPvzBadRequest() *PostPvzBadRequest {

	return &PostPvzBadRequest{}
}

// WithPayload adds the payload to the post pvz bad request response
func (o *PostPvzBadRequest) WithPayload(payload *models.Error) *PostPvzBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post pvz bad request response
func (o *PostPvzBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPvzBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostPvzForbiddenCode is the HTTP code returned for type PostPvzForbidden
const PostPvzForbiddenCode int = 403

/*
PostPvzForbidden Доступ запрещен

swagger:response postPvzForbidden
*/
type PostPvzForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostPvzForbidden creates PostPvzForbidden with default headers values
func NewPostPvzForbidden() *PostPvzForbidden {

	return &PostPvzForbidden{}
}

// WithPayload adds the payload to the post pvz forbidden response
func (o *PostPvzForbidden) WithPayload(payload *models.Error) *PostPvzForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post pvz forbidden response
func (o *PostPvzForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPvzForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
