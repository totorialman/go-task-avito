// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/totorialman/go-task-avito/models"
)

// PostReceptionsCreatedCode is the HTTP code returned for type PostReceptionsCreated
const PostReceptionsCreatedCode int = 201

/*
PostReceptionsCreated Приемка создана

swagger:response postReceptionsCreated
*/
type PostReceptionsCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Reception `json:"body,omitempty"`
}

// NewPostReceptionsCreated creates PostReceptionsCreated with default headers values
func NewPostReceptionsCreated() *PostReceptionsCreated {

	return &PostReceptionsCreated{}
}

// WithPayload adds the payload to the post receptions created response
func (o *PostReceptionsCreated) WithPayload(payload *models.Reception) *PostReceptionsCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post receptions created response
func (o *PostReceptionsCreated) SetPayload(payload *models.Reception) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostReceptionsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostReceptionsBadRequestCode is the HTTP code returned for type PostReceptionsBadRequest
const PostReceptionsBadRequestCode int = 400

/*
PostReceptionsBadRequest Неверный запрос или есть незакрытая приемка

swagger:response postReceptionsBadRequest
*/
type PostReceptionsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostReceptionsBadRequest creates PostReceptionsBadRequest with default headers values
func NewPostReceptionsBadRequest() *PostReceptionsBadRequest {

	return &PostReceptionsBadRequest{}
}

// WithPayload adds the payload to the post receptions bad request response
func (o *PostReceptionsBadRequest) WithPayload(payload *models.Error) *PostReceptionsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post receptions bad request response
func (o *PostReceptionsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostReceptionsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostReceptionsForbiddenCode is the HTTP code returned for type PostReceptionsForbidden
const PostReceptionsForbiddenCode int = 403

/*
PostReceptionsForbidden Доступ запрещен

swagger:response postReceptionsForbidden
*/
type PostReceptionsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostReceptionsForbidden creates PostReceptionsForbidden with default headers values
func NewPostReceptionsForbidden() *PostReceptionsForbidden {

	return &PostReceptionsForbidden{}
}

// WithPayload adds the payload to the post receptions forbidden response
func (o *PostReceptionsForbidden) WithPayload(payload *models.Error) *PostReceptionsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post receptions forbidden response
func (o *PostReceptionsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostReceptionsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
